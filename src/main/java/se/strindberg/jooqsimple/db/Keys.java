/*
 * This file is generated by jOOQ.
 */
package se.strindberg.jooqsimple.db;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import se.strindberg.jooqsimple.db.tables.Address;
import se.strindberg.jooqsimple.db.tables.Person;
import se.strindberg.jooqsimple.db.tables.records.AddressRecord;
import se.strindberg.jooqsimple.db.tables.records.PersonRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.2",
        "schema version:none"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PersonRecord> CONSTRAINT_C = Internal.createUniqueKey(Person.PERSON, DSL.name("CONSTRAINT_C"), new TableField[] { Person.PERSON.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AddressRecord, PersonRecord> CONSTRAINT_B = Internal.createForeignKey(Address.ADDRESS, DSL.name("CONSTRAINT_B"), new TableField[] { Address.ADDRESS.PERSON_ID }, Keys.CONSTRAINT_C, new TableField[] { Person.PERSON.ID }, true);
}

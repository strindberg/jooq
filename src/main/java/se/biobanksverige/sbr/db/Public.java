/*
 * This file is generated by jOOQ.
 */
package se.biobanksverige.sbr.db;


import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import se.biobanksverige.sbr.db.tables.Issue;
import se.biobanksverige.sbr.db.tables.IssueComplete;
import se.biobanksverige.sbr.db.tables.IssueConsent;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.2",
        "schema version:none"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.issue</code>.
     */
    public final Issue ISSUE = Issue.ISSUE;

    /**
     * The table <code>public.issue_complete</code>.
     */
    public final IssueComplete ISSUE_COMPLETE = IssueComplete.ISSUE_COMPLETE;

    /**
     * The table <code>public.issue_consent</code>.
     */
    public final IssueConsent ISSUE_CONSENT = IssueConsent.ISSUE_CONSENT;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Issue.ISSUE,
            IssueComplete.ISSUE_COMPLETE,
            IssueConsent.ISSUE_CONSENT
        );
    }
}
